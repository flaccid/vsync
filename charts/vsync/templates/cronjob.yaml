{{if eq .Values.workload.type "cronjob"}}
{{- $chart_name := .Chart.Name }}
{{- $chart_version := .Chart.Version | replace "+" "_" }}
{{- $release_name := .Release.Name }}
{{- $vault := .Values.vault }}

{{- range $job := .Values.jobs }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "{{ $release_name }}-{{ $job.name }}"
  labels:
    chart: "{{ $chart_name }}-{{ $chart_version }}"
spec:
  concurrencyPolicy: {{ $job.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ $job.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: {{ $release_name }}
            cron: {{ $job.name }}
        spec:
          containers:
            - name: {{ $job.name }}
              image: "{{ $job.image.repository }}:{{ $job.image.tag }}"
              imagePullPolicy: {{ $job.image.imagePullPolicy }}
              {{- if $job.command }}
              command: {{ $job.command }}
              {{- end }}
              {{- with $job.args }}
              args:
{{ toYaml . | indent 14 }}
              {{- end }}
              env:
              - name: VAULT_ADDR
                value: {{ $vault.source.address }}
              - name: VAULT_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: vsync-vault-tokens
                    key: vault-token
              - name: DESTINATION_VAULT_ADDR
                value: {{ $vault.destination.address }}
              - name: DESTINATION_VAULT_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: vsync-vault-tokens
                    key: destination-vault-token
              {{- with $job.resources }}
              resources:
{{ toYaml . | indent 16 }}
              {{- end }}
            restartPolicy: {{ $job.restartPolicy }}
schedule: {{ $job.schedule | quote }}
successfulJobsHistoryLimit: {{ $job.successfulJobsHistoryLimit }}
{{- end }}
{{end}}
